<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>Student Attendance Check</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">

  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.js"></script>

  <!-- Sweet Alert -->
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <!-- Loading Overlay -->
  <script src="https://cdn.jsdelivr.net/npm/gasparesganga-jquery-loading-overlay@2.1.7/dist/loadingoverlay.min.js"></script>

  <style>
  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Thai');

  * {
    box-sizing: border-box;
    font-family: 'Noto Sans Thai', sans-serif;
  }

    body {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      min-height: 100vh;
      background: rgb(252, 233, 233);
      background: linear-gradient(0deg, rgba(252, 233, 233, 1) 0%, rgba(224, 244, 241, 1) 26%, rgba(255, 255, 255, 1) 71%);
      -webkit-background-size: cover;
      -moz-background-size: cover;
      -o-background-size: cover;
      flex-direction: column;
    }
  
    .list {
      background-color: #ffffff;
      padding: 1.8em 1.2em;
      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
      border-radius: 0.6em;
    }
  
    footer {
      margin-top: 10px;
      background-color: #000;
      width: 100%;
      padding: 2px;
      position: fixed;
      bottom: 0;
    }
  
    footer p,
    footer a {
      text-decoration: none;
      margin: 0;
    }
  
    footer .fa {
      color: #fff740;
    }
  </style>
  </head>
<body>
  <center class="mb-4" >
<img src="https://lh3.googleusercontent.com/d/1ZMI9FTcErAj1N8vh0viy3rAPnxZ7Zsky" class="mt-4" style="width:200px; height:auto; padding-bottom: 10px; ">  
<h2>Student Attendance Apps</h2>                  
<h5 class="text-center text-danger">สื่อ และนวัตกรรมครูสิทธิชาติ สิทธิ</h5>   
</center>

    <main class="container">
  <div class="container list">
    <div class="d-flex justify-content-center mb-3">
      <button id="check-all-present" class="btn btn-primary me-2">มาทั้งหมด</button>
      <button id="check-all-absent" class="btn btn-secondary">ขาดทั้งหมด</button>
      <button id="check-all-leave" class="btn btn-warning ms-2">ลาทั้งหมด</button>
      <button id="check-all-late" class="btn btn-danger ms-2">สายทั้งหมด</button>
    </div>
    <form id="attendance-form" class="mt-4">
      <div class="row mb-3">
        <label class="col-form-label">รายชื่อนักเรียน:</label>
      </div>
      <div id="student-list"></div>
      <center><button type="submit" class="btn btn-primary mt-3">Submit Attendance</button></center>
    </form>
    <center><button id="send-summary" class="btn btn-success mt-3">Share Target Picker</button></center>
    
  </div>
  </main>

  <script src="https://static.line-scdn.net/liff/edge/2/sdk.js"></script>
  <script src="https://cdn.jsdelivr.net/gh/sanwithz/SetFooter/sanzwithz.js"></script>

  <script>
    let attendanceRecords = [];
    const studentListUrl = 'https://opensheet.elk.sh/SPREAD_SHEET_ID/SHEET_NAME'; // จุดแก้ที่ 1

    window.onload = function() {
      // Initialize LIFF app with login required
      liff.init({ liffId: 'YOUR_LIFF_ID' }) // จุดแก้ที่ 2
        .then(() => {
          if (!liff.isLoggedIn()) {
            liff.login();
          } else {
            console.log('LIFF initialized');
            // Fetch student list and generate form
            fetchStudentList();
            // Add event listeners
            document.getElementById('attendance-form').addEventListener('submit', addAttendanceRecord);
            document.getElementById('send-summary').addEventListener('click', sendSummary);
            document.getElementById('check-all-present').addEventListener('click', () => checkAll('มา'));
            document.getElementById('check-all-absent').addEventListener('click', () => checkAll('ขาด'));
            document.getElementById('check-all-leave').addEventListener('click', () => checkAll('ลา'));
            document.getElementById('check-all-late').addEventListener('click', () => checkAll('สาย'));
          }
        })
        .catch((err) => {
          console.error('Error initializing LIFF: ', err);
          Swal.fire('Error', 'Failed to initialize LIFF: ' + err, 'error');
        });
    };

    function fetchStudentList() {
      fetch(studentListUrl)
        .then(response => response.json())
        .then(data => generateStudentList(data))
        // .catch(error => {
        //   console.error('Error fetching student list: ', error);
        //   Swal.fire('Error', 'Failed to fetch student list: ' + error, 'error');
        // });
    }

    function generateStudentList(students) {
      const studentList = document.getElementById('student-list');
      students.forEach(student => {
        const studentRow = document.createElement('div');
        studentRow.className = 'row mb-3';
        studentRow.innerHTML = `
          <div class="col-6">
            <label class="form-label">${student['เลขที่']}. ${student['รายชื่อนักเรียน']}</label>
          </div>
          <div class="col-1">
            <label>
              <input type="radio" name="student${student['เลขที่']}" value="มา" required> มา
            </label>
          </div>
          <div class="col-1">
            <label>
              <input type="radio" name="student${student['เลขที่']}" value="ขาด" required> ขาด
            </label>
          </div>
          <div class="col-1">
            <label>
              <input type="radio" name="student${student['เลขที่']}" value="ลา" required> ลา
            </label>
          </div>
          <div class="col-1">
            <label>
              <input type="radio" name="student${student['เลขที่']}" value="สาย" required> สาย
            </label>
          </div>
        `;
        studentList.appendChild(studentRow);
      });
    }
  $(document).ready(function() { 
     setFooter()
   })
    
    function checkAll(status) {
      const studentList = document.getElementById('student-list');
      const radios = studentList.querySelectorAll(`input[value="${status}"]`);
      radios.forEach(radio => radio.checked = true);
    }

    function addAttendanceRecord(event) {
      event.preventDefault();
      attendanceRecords = [];
      let allSelected = true;

      const studentList = document.getElementById('student-list');
      const studentRows = studentList.querySelectorAll('.row');

      studentRows.forEach(row => {
        const studentName = row.querySelector('.form-label').innerText.replace(/:$/, '');
        const studentStatusElement = row.querySelector('input:checked');

        if (studentStatusElement) {
          const studentStatus = studentStatusElement.value;
          attendanceRecords.push({ name: studentName, status: studentStatus });
        } else {
          allSelected = false;
        }
      });

      if (allSelected) {
        saveToSheet(attendanceRecords);
        // document.getElementById('attendance-form').reset();
      } else {
        Swal.fire('Error', 'Please fill in the attendance status for all students!', 'error');
      }
    }

    function saveToSheet(records) {
      $.LoadingOverlay("show");

      const url = 'https://script.google.com/macros/s/XXXXXXXXXXXXXX/exec'; // จุดแก้ที่ 3

      $.post(url, JSON.stringify(records), function(data) {
        $.LoadingOverlay("hide");
        if (data.status === 'success') {
          Swal.fire('Success', 'บันทึกข้อมูลเรียบร้อย', 'success');
        } else {
          Swal.fire('Error', 'Failed to save attendance data!', 'error');
        }
      }).fail(function() {
        $.LoadingOverlay("hide");
        Swal.fire('Error', 'Failed to connect to the server!', 'error');
      });
    }

    function sendSummary() {
      if (attendanceRecords.length === 0) {
        Swal.fire('Error', 'No attendance records to send!', 'error');
        return;
      }

      const presentCount = attendanceRecords.filter(record => record.status === 'มา').length;
      const absentCount = attendanceRecords.filter(record => record.status === 'ขาด').length;
      const leaveCount = attendanceRecords.filter(record => record.status === 'ลา').length;
      const lateCount = attendanceRecords.filter(record => record.status === 'สาย').length;
      const totalCount = attendanceRecords.length;
      const presentPercentage = ((presentCount / totalCount) * 100).toFixed(2);
      const absentPercentage = ((absentCount / totalCount) * 100).toFixed(2);
      const leavePercentage = ((leaveCount / totalCount) * 100).toFixed(2);
      const latePercentage = ((lateCount / totalCount) * 100).toFixed(2);

      const now = new Date();
      const dateString = now.toLocaleDateString();

      let summaryText = `วันที่ ${dateString}\n`;
      attendanceRecords.forEach(record => {
        summaryText += `${record.name}: ${record.status}\n`;
      });
      summaryText += `\nมาเรียน: ${presentCount} คน คิดเป็น (${presentPercentage}%)\nขาดเรียน: ${absentCount} คน คิดเป็น (${absentPercentage}%)\nลา: ${leaveCount} คน คิดเป็น (${leavePercentage}%)\nสาย: ${lateCount} คน คิดเป็น (${latePercentage}%)`;

const flexMessage = {
  type: 'flex',
  altText: 'Attendance Summary',
  contents: {
    type: 'bubble',
    size: 'giga',
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: `สรุปการมาเรียน ม.4/13`,
          weight: 'bold',
          size: 'xl',
          color: '#1DB446',
          margin: 'md'
        },
                    {
              type: 'text',
              text: `วันที่ ${new Date().toLocaleDateString()}`,
              size: 'md',
              color: '#888888'
            },
        {
          type: 'separator',
          margin: 'md'
        },
        {
          type: 'box',
          layout: 'vertical',
          margin: 'md',
          spacing: 'sm',
          contents: attendanceRecords.map(record => ({
            type: 'box',
            layout: 'horizontal',
            contents: [
              {
                type: 'text',
                text: record.name,
                size: 'md',
                color: '#555555',
                flex: 4
              },
              {
                type: 'text',
                text: record.status,
                size: 'md',
                color: record.status === 'มา' ? '#1DB446' : (record.status === 'ขาด' ? '#FF5555' : (record.status === 'ลา' ? '#FFC107' : '#FF8800')),
                flex: 2,
                align: 'end'
              }
            ]
          }))
        },
        {
          type: 'separator',
          margin: 'md'
        },
        {
          type: 'box',
          layout: 'vertical',
          margin: 'md',
          contents: [
            {
              type: 'box',
              layout: 'horizontal',
              contents: [
                {
                  type: 'text',
                  text: 'มาเรียน:',
                  size: 'md',
                  color: '#1DB446',
                  flex: 3
                },
                {
                  type: 'text',
                  text: `${presentCount} คน (${presentPercentage}%)`,
                  size: 'md',
                  color: '#1DB446',
                  flex: 2,
                  align: 'end'
                }
              ]
            },
            {
              type: 'box',
              layout: 'horizontal',
              contents: [
                {
                  type: 'text',
                  text: 'ขาดเรียน:',
                  size: 'md',
                  color: '#FF5555',
                  flex: 3
                },
                {
                  type: 'text',
                  text: `${absentCount} คน (${absentPercentage}%)`,
                  size: 'md',
                  color: '#FF5555',
                  flex: 2,
                  align: 'end'
                }
              ]
            },
            {
              type: 'box',
              layout: 'horizontal',
              contents: [
                {
                  type: 'text',
                  text: 'ลา:',
                  size: 'md',
                  color: '#FFC107',
                  flex: 3
                },
                {
                  type: 'text',
                  text: `${leaveCount} คน (${leavePercentage}%)`,
                  size: 'md',
                  color: '#FFC107',
                  flex: 2,
                  align: 'end'
                }
              ]
            },
            {
              type: 'box',
              layout: 'horizontal',
              contents: [
                {
                  type: 'text',
                  text: 'สาย:',
                  size: 'sm',
                  color: '#FF8800',
                  flex: 3
                },
                {
                  type: 'text',
                  text: `${lateCount} คน (${latePercentage}%)`,
                  size: 'sm',
                  color: '#FF8800',
                  flex: 2,
                  align: 'end'
                }
              ]
            }
          ]
        }
      ]
    },
    styles: {
      footer: {
        separator: true
      }
    }
  }
};


      liff.shareTargetPicker([flexMessage])
        .then((result) => {
          if (result) {
            Swal.fire('Success', 'Attendance summary shared successfully!', 'success');
          } else {
            Swal.fire('Info', 'ShareTargetPicker was closed without sending the message', 'info');
          }
          liff.closeWindow();
        })
        .catch((error) => {
          Swal.fire('Error', 'Error sharing attendance summary: ' + error, 'error');
        });
    }
  </script>
  
<footer class="text-center text-lg-start bg-light text-muted" style="  position: static;left: 0;bottom: 0;width: 100%;">
<div class="footer-container"></div>
</footer>
  

</body>
</html>
